{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guste\\\\Desktop\\\\Projeto Random\\\\ProjetoJogoDificil\\\\SiginificadoPalavrasJogo\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport \"./styles/globals.css\";\nimport 'tailwindcss/tailwind.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [palavra, setPalavra] = useState(null);\n  const [tentativas, setTentativas] = useState([]);\n  const [tentativaAtual, setTentativaAtual] = useState('');\n  const [gameStatus, setGameStatus] = useState('jogando'); // 'jogando', 'venceu', 'perdeu'\n  const [mensagem, setMensagem] = useState('');\n  const [carregando, setCarregando] = useState(false);\n  const [definicaoCompleta, setDefinicaoCompleta] = useState(null);\n  const MAX_TENTATIVAS = 6;\n  const carregarPalavra = useCallback(async () => {\n    try {\n      setCarregando(true);\n      setMensagem('');\n      setDefinicaoCompleta(null);\n      setTentativaAtual('');\n      setTentativas([]);\n      setGameStatus('jogando');\n      const response = await axios.get('http://localhost:8000/api/palavra-aleatoria');\n      setPalavra(response.data);\n    } catch (error) {\n      setMensagem(\"❌ Erro ao carregar palavra. Tente recarregar a página.\");\n    } finally {\n      setCarregando(false);\n    }\n  }, []);\n  useEffect(() => {\n    carregarPalavra();\n  }, [carregarPalavra]);\n  const verificarTentativa = async () => {\n    if (!tentativaAtual.trim()) {\n      setMensagem(\"Por favor, digite uma palavra\");\n      return;\n    }\n    if (tentativaAtual.length !== 5) {\n      setMensagem(\"A palavra deve ter 5 letras!\");\n      return;\n    }\n    try {\n      setCarregando(true);\n\n      // Simular a verificação da tentativa (substituir pela sua lógica real)\n      const palavraSecreta = palavra.termo.toUpperCase();\n      const tentativa = tentativaAtual.toUpperCase();\n\n      // Criar o resultado da tentativa\n      const resultado = Array(5).fill(null);\n      const palavraSecretaArray = palavraSecreta.split('');\n      const tentativaArray = tentativa.split('');\n\n      // Primeiro passo: marcar letras corretas\n      tentativaArray.forEach((letra, i) => {\n        if (letra === palavraSecretaArray[i]) {\n          resultado[i] = 'correct';\n          palavraSecretaArray[i] = null; // Marcar como usada\n        }\n      });\n\n      // Segundo passo: marcar letras presentes em posição errada\n      tentativaArray.forEach((letra, i) => {\n        if (resultado[i] === null) {\n          const indexNaPalavraSecreta = palavraSecretaArray.indexOf(letra);\n          if (indexNaPalavraSecreta >= 0) {\n            resultado[i] = 'present';\n            palavraSecretaArray[indexNaPalavraSecreta] = null; // Marcar como usada\n          } else {\n            resultado[i] = 'absent';\n          }\n        }\n      });\n\n      // Adicionar a tentativa\n      const novaTentativa = {\n        palavra: tentativa,\n        resultado: resultado\n      };\n      const novasTentativas = [...tentativas, novaTentativa];\n      setTentativas(novasTentativas);\n      setTentativaAtual('');\n\n      // Verificar se ganhou\n      if (tentativa === palavraSecreta) {\n        setGameStatus('venceu');\n        setMensagem(\"✅ Parabéns! Você acertou a palavra!\");\n        setDefinicaoCompleta(palavra.definicao);\n      } else if (novasTentativas.length >= MAX_TENTATIVAS) {\n        setGameStatus('perdeu');\n        setMensagem(`❌ Você perdeu! A palavra era: ${palavraSecreta}`);\n        setDefinicaoCompleta(palavra.definicao);\n      }\n    } catch (error) {\n      setMensagem(\"❌ Erro ao verificar tentativa. Tente novamente.\");\n    } finally {\n      setCarregando(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (gameStatus !== 'jogando' || carregando) return;\n    if (e.key === 'Enter') {\n      verificarTentativa();\n    } else if (e.key === 'Backspace') {\n      setTentativaAtual(prev => prev.slice(0, -1));\n    } else if (/^[A-Za-z]$/.test(e.key) && tentativaAtual.length < 5) {\n      setTentativaAtual(prev => prev + e.key.toUpperCase());\n    }\n  };\n\n  // Adicionar event listener para teclas\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [tentativaAtual, tentativas, gameStatus, carregando]);\n\n  // Renderizar quadrados da tentativa atual\n  const renderTentativaAtual = () => {\n    const letras = tentativaAtual.split('');\n    const quadrados = [];\n    for (let i = 0; i < 5; i++) {\n      quadrados.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quadrado flex items-center justify-center border-2 border-[var(--color-border)] text-4xl font-bold\",\n        children: letras[i] || ''\n      }, `current-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this));\n    }\n    return quadrados;\n  };\n\n  // Renderizar as tentativas anteriores\n  const renderTentativas = () => {\n    return tentativas.map((tentativa, tentativaIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-1 mb-1\",\n      children: tentativa.palavra.split('').map((letra, letraIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `quadrado flex items-center justify-center text-4xl font-bold ${tentativa.resultado[letraIndex] === 'correct' ? 'bg-[var(--color-correct)]' : tentativa.resultado[letraIndex] === 'present' ? 'bg-[var(--color-present)]' : 'bg-[var(--color-absent)]'}`,\n        children: letra\n      }, `try-${tentativaIndex}-letter-${letraIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, `try-${tentativaIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this));\n  };\n  const linhasRestantes = MAX_TENTATIVAS - tentativas.length - (gameStatus === 'jogando' ? 1 : 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-start pt-6 bg-[var(--color-bg-primary)]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"game-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"game-title\",\n          children: \"TERMO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quadro-principal mb-4\",\n        children: [renderTentativas(), gameStatus === 'jogando' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-1 mb-1\",\n          children: renderTentativaAtual()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), Array.from({\n          length: linhasRestantes\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-1 mb-1\",\n          children: Array.from({\n            length: 5\n          }).map((_, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quadrado flex items-center justify-center border-2 border-[var(--color-border)]\"\n          }, `empty-${i}-${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, `empty-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), mensagem && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `feedback-message ${mensagem.includes('✅') ? 'feedback-correct' : mensagem.includes('❌') ? 'feedback-absent' : 'bg-[var(--color-bg-secondary)]'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: mensagem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), definicaoCompleta && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm\",\n            children: [\"Defini\\xE7\\xE3o: \", definicaoCompleta]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: verificarTentativa,\n          className: `btn btn-primary ${carregando || !tentativaAtual.trim() || gameStatus !== 'jogando' ? 'opacity-50 cursor-not-allowed' : ''}`,\n          disabled: carregando || !tentativaAtual.trim() || gameStatus !== 'jogando',\n          children: \"Verificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: carregarPalavra,\n          className: \"btn btn-secondary\",\n          disabled: carregando,\n          children: \"Nova Palavra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sanVZkOQHa1zSNX2bvZxEwajz5E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","App","_s","palavra","setPalavra","tentativas","setTentativas","tentativaAtual","setTentativaAtual","gameStatus","setGameStatus","mensagem","setMensagem","carregando","setCarregando","definicaoCompleta","setDefinicaoCompleta","MAX_TENTATIVAS","carregarPalavra","response","get","data","error","verificarTentativa","trim","length","palavraSecreta","termo","toUpperCase","tentativa","resultado","Array","fill","palavraSecretaArray","split","tentativaArray","forEach","letra","i","indexNaPalavraSecreta","indexOf","novaTentativa","novasTentativas","definicao","handleKeyDown","e","key","prev","slice","test","window","addEventListener","removeEventListener","renderTentativaAtual","letras","quadrados","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTentativas","map","tentativaIndex","letraIndex","linhasRestantes","from","_","j","includes","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Guste/Desktop/Projeto Random/ProjetoJogoDificil/SiginificadoPalavrasJogo/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport \"./styles/globals.css\";\r\nimport 'tailwindcss/tailwind.css';\r\n\r\nfunction App() {\r\n  const [palavra, setPalavra] = useState(null);\r\n  const [tentativas, setTentativas] = useState([]);\r\n  const [tentativaAtual, setTentativaAtual] = useState('');\r\n  const [gameStatus, setGameStatus] = useState('jogando'); // 'jogando', 'venceu', 'perdeu'\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [carregando, setCarregando] = useState(false);\r\n  const [definicaoCompleta, setDefinicaoCompleta] = useState(null);\r\n  \r\n  const MAX_TENTATIVAS = 6;\r\n  \r\n  const carregarPalavra = useCallback(async () => {\r\n    try {\r\n      setCarregando(true);\r\n      setMensagem('');\r\n      setDefinicaoCompleta(null);\r\n      setTentativaAtual('');\r\n      setTentativas([]);\r\n      setGameStatus('jogando');\r\n      \r\n      const response = await axios.get('http://localhost:8000/api/palavra-aleatoria');\r\n      setPalavra(response.data);\r\n    } catch (error) {\r\n      setMensagem(\"❌ Erro ao carregar palavra. Tente recarregar a página.\");\r\n    } finally {\r\n      setCarregando(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => { \r\n    carregarPalavra();\r\n  }, [carregarPalavra]);\r\n  \r\n  const verificarTentativa = async () => {\r\n    if (!tentativaAtual.trim()) {\r\n      setMensagem(\"Por favor, digite uma palavra\");\r\n      return;\r\n    }\r\n    \r\n    if (tentativaAtual.length !== 5) {\r\n      setMensagem(\"A palavra deve ter 5 letras!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setCarregando(true);\r\n      \r\n      // Simular a verificação da tentativa (substituir pela sua lógica real)\r\n      const palavraSecreta = palavra.termo.toUpperCase();\r\n      const tentativa = tentativaAtual.toUpperCase();\r\n      \r\n      // Criar o resultado da tentativa\r\n      const resultado = Array(5).fill(null);\r\n      const palavraSecretaArray = palavraSecreta.split('');\r\n      const tentativaArray = tentativa.split('');\r\n      \r\n      // Primeiro passo: marcar letras corretas\r\n      tentativaArray.forEach((letra, i) => {\r\n        if (letra === palavraSecretaArray[i]) {\r\n          resultado[i] = 'correct';\r\n          palavraSecretaArray[i] = null; // Marcar como usada\r\n        }\r\n      });\r\n      \r\n      // Segundo passo: marcar letras presentes em posição errada\r\n      tentativaArray.forEach((letra, i) => {\r\n        if (resultado[i] === null) {\r\n          const indexNaPalavraSecreta = palavraSecretaArray.indexOf(letra);\r\n          if (indexNaPalavraSecreta >= 0) {\r\n            resultado[i] = 'present';\r\n            palavraSecretaArray[indexNaPalavraSecreta] = null; // Marcar como usada\r\n          } else {\r\n            resultado[i] = 'absent';\r\n          }\r\n        }\r\n      });\r\n      \r\n      // Adicionar a tentativa\r\n      const novaTentativa = {\r\n        palavra: tentativa,\r\n        resultado: resultado\r\n      };\r\n      \r\n      const novasTentativas = [...tentativas, novaTentativa];\r\n      setTentativas(novasTentativas);\r\n      setTentativaAtual('');\r\n      \r\n      // Verificar se ganhou\r\n      if (tentativa === palavraSecreta) {\r\n        setGameStatus('venceu');\r\n        setMensagem(\"✅ Parabéns! Você acertou a palavra!\");\r\n        setDefinicaoCompleta(palavra.definicao);\r\n      } else if (novasTentativas.length >= MAX_TENTATIVAS) {\r\n        setGameStatus('perdeu');\r\n        setMensagem(`❌ Você perdeu! A palavra era: ${palavraSecreta}`);\r\n        setDefinicaoCompleta(palavra.definicao);\r\n      }\r\n      \r\n    } catch (error) {\r\n      setMensagem(\"❌ Erro ao verificar tentativa. Tente novamente.\");\r\n    } finally {\r\n      setCarregando(false);\r\n    }\r\n  };\r\n  \r\n  const handleKeyDown = (e) => {\r\n    if (gameStatus !== 'jogando' || carregando) return;\r\n    \r\n    if (e.key === 'Enter') {\r\n      verificarTentativa();\r\n    } else if (e.key === 'Backspace') {\r\n      setTentativaAtual(prev => prev.slice(0, -1));\r\n    } else if (/^[A-Za-z]$/.test(e.key) && tentativaAtual.length < 5) {\r\n      setTentativaAtual(prev => prev + e.key.toUpperCase());\r\n    }\r\n  };\r\n  \r\n  // Adicionar event listener para teclas\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [tentativaAtual, tentativas, gameStatus, carregando]);\r\n  \r\n  // Renderizar quadrados da tentativa atual\r\n  const renderTentativaAtual = () => {\r\n    const letras = tentativaAtual.split('');\r\n    const quadrados = [];\r\n    \r\n    for (let i = 0; i < 5; i++) {\r\n      quadrados.push(\r\n        <div key={`current-${i}`} className=\"quadrado flex items-center justify-center border-2 border-[var(--color-border)] text-4xl font-bold\">\r\n          {letras[i] || ''}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return quadrados;\r\n  };\r\n  \r\n  // Renderizar as tentativas anteriores\r\n  const renderTentativas = () => {\r\n    return tentativas.map((tentativa, tentativaIndex) => (\r\n      <div key={`try-${tentativaIndex}`} className=\"grid grid-cols-5 gap-1 mb-1\">\r\n        {tentativa.palavra.split('').map((letra, letraIndex) => (\r\n          <div \r\n            key={`try-${tentativaIndex}-letter-${letraIndex}`} \r\n            className={`quadrado flex items-center justify-center text-4xl font-bold ${\r\n              tentativa.resultado[letraIndex] === 'correct' ? 'bg-[var(--color-correct)]' :\r\n              tentativa.resultado[letraIndex] === 'present' ? 'bg-[var(--color-present)]' :\r\n              'bg-[var(--color-absent)]'\r\n            }`}\r\n          >\r\n            {letra}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ));\r\n  };\r\n  \r\n  const linhasRestantes = MAX_TENTATIVAS - tentativas.length - (gameStatus === 'jogando' ? 1 : 0);\r\n  \r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-start pt-6 bg-[var(--color-bg-primary)]\">\r\n      <div className=\"game-container\">\r\n        <header className=\"game-header\">\r\n          <h1 className=\"game-title\">TERMO</h1>\r\n        </header>\r\n        \r\n        <div className=\"quadro-principal mb-4\">\r\n          {/* Tentativas anteriores */}\r\n          {renderTentativas()}\r\n          \r\n          {/* Tentativa atual */}\r\n          {gameStatus === 'jogando' && (\r\n            <div className=\"grid grid-cols-5 gap-1 mb-1\">\r\n              {renderTentativaAtual()}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Linhas vazias restantes */}\r\n          {Array.from({ length: linhasRestantes }).map((_, i) => (\r\n            <div key={`empty-${i}`} className=\"grid grid-cols-5 gap-1 mb-1\">\r\n              {Array.from({ length: 5 }).map((_, j) => (\r\n                <div key={`empty-${i}-${j}`} className=\"quadrado flex items-center justify-center border-2 border-[var(--color-border)]\"></div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Mensagem de feedback */}\r\n        {mensagem && (\r\n          <div className=\"feedback-container\">\r\n            <div className={`feedback-message ${\r\n              mensagem.includes('✅') ? 'feedback-correct' :\r\n              mensagem.includes('❌') ? 'feedback-absent' :\r\n              'bg-[var(--color-bg-secondary)]'\r\n            }`}>\r\n              <p>{mensagem}</p>\r\n              {definicaoCompleta && (\r\n                <p className=\"mt-2 text-sm\">Definição: {definicaoCompleta}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Botões */}\r\n        <div className=\"buttons-container mt-4\">\r\n          <button\r\n            onClick={verificarTentativa}\r\n            className={`btn btn-primary ${carregando || !tentativaAtual.trim() || gameStatus !== 'jogando' ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n            disabled={carregando || !tentativaAtual.trim() || gameStatus !== 'jogando'}\r\n          >\r\n            Verificar\r\n          </button>\r\n          <button\r\n            onClick={carregarPalavra}\r\n            className=\"btn btn-secondary\"\r\n            disabled={carregando}\r\n          >\r\n            Nova Palavra\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}